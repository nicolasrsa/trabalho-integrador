package br.com.transportadora.view.panels;

import br.com.transportadora.controller.TransportadoraController;
import br.com.transportadora.model.CaminhaoBau;
import br.com.transportadora.model.Encomenda;
import br.com.transportadora.model.Roteiro;
import br.com.transportadora.model.RoteiroDiario;
import br.com.transportadora.model.Van;
import br.com.transportadora.model.Veiculo;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;


public class PanelDetalheRoteiroDiario extends javax.swing.JPanel {

  private RoteiroDiario roteiroDiario;

  /**
   * Creates new form PanelDetalheRoteiroDia
   */
  public PanelDetalheRoteiroDiario() {
    initComponents();
  }

  private DefaultListModel<Roteiro> listModel(List<Roteiro> roteiros) {
    DefaultListModel<Roteiro> listModel = new DefaultListModel<>();
    for (Roteiro roteiro : roteiros) {
      listModel.add(0, roteiro);
    }
    return listModel;
  }

  private DefaultListModel<Encomenda> listModelEncomenda(List<Encomenda> encomendas) {
    DefaultListModel<Encomenda> listModel = new DefaultListModel<>();
    for (Encomenda encomenda : encomendas) {
      listModel.add(0, encomenda);
    }
    return listModel;
  }

  public void configurarInformacoes(RoteiroDiario roteiroDiario) {
    this.roteiroDiario = roteiroDiario;
    listRoteiros.setModel(listModel(roteiroDiario.getRoteiros()));
    listRoteiros.setSelectedIndex(0);
    atualizarListasControleEncomendas();

  }

  private String gerarRelatorioRoteiro(Roteiro roteiro) {
    String texto = "Roteiro Diária " + roteiro.toString() + "\n";

    texto += "=> Motorista:" + "\n";
    texto += "Nome: " + roteiro.getMotorista().getNome() + "\n";
    texto += "Número CNH: " + roteiro.getMotorista().getCnh().getNumero() + "\n";
    texto += "Classe CNH: " + roteiro.getMotorista().getCnh().getClasse().toString() + "\n\n\n";

    texto += "=> Veículo: " + definirTipoVeiculo(roteiro.getVeiculo()) + "\n";
    texto += "Marca: " + roteiro.getVeiculo().getMarca() + "\n";
    texto += "Modelo: " + roteiro.getVeiculo().getModelo() + "\n";
    texto += "Placa: " + roteiro.getVeiculo().getPlaca() + "\n\n\n";

    texto += "=> Encomendas: \n";
    for (Encomenda encomenda : roteiro.getEncomendas()) {
      texto += "Código: " + encomenda.getCodigo() + "\n";
      texto += "Remetente:\n";
      texto += "Nome: " + encomenda.getRemetente().getNome() + "\n";
      texto += encomenda.getRemetente().getEndereco() + "\n";
      texto += "Destinatário:\n";
      texto += "Nome: " + encomenda.getDestinatario().getNome() + "\n";
      texto += encomenda.getDestinatario().getEndereco() + "\n\n";
    }

    return texto;
  }

  private String definirTipoVeiculo(Veiculo veiculo) {
    if (veiculo instanceof Van) {
      return "Van";
    } else if (veiculo instanceof CaminhaoBau) {
      return "Caminhão Baú";
    } else {
      return "Carreta";
    }
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
   * content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listRoteiros = new javax.swing.JList<>();
        jSeparator1 = new javax.swing.JSeparator();
        panelExibicaoRoteiros = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputRelatorioRoteiro = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listEntregasRealizadas = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        listEntregas = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        listEntregasNaoRealizadas = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setMinimumSize(new java.awt.Dimension(100, 20));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Motoristas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel1, gridBagConstraints);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(140, 200));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(140, 200));

        listRoteiros.setMinimumSize(new java.awt.Dimension(140, 200));
        listRoteiros.setPreferredSize(new java.awt.Dimension(140, 200));
        listRoteiros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listRoteirosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listRoteiros);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(jPanel1, gridBagConstraints);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        add(jSeparator1, gridBagConstraints);

        panelExibicaoRoteiros.setLayout(new java.awt.GridBagLayout());

        outputRelatorioRoteiro.setColumns(20);
        outputRelatorioRoteiro.setRows(5);
        jScrollPane2.setViewportView(outputRelatorioRoteiro);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelExibicaoRoteiros.add(jScrollPane2, gridBagConstraints);

        jLabel2.setText("Roteiro de Entrega");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelExibicaoRoteiros.add(jLabel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        listEntregasRealizadas.setMinimumSize(new java.awt.Dimension(100, 80));
        listEntregasRealizadas.setPreferredSize(new java.awt.Dimension(100, 80));
        jScrollPane3.setViewportView(listEntregasRealizadas);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jScrollPane3, gridBagConstraints);

        listEntregas.setMinimumSize(new java.awt.Dimension(100, 80));
        listEntregas.setPreferredSize(new java.awt.Dimension(100, 80));
        jScrollPane4.setViewportView(listEntregas);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jScrollPane4, gridBagConstraints);

        listEntregasNaoRealizadas.setMinimumSize(new java.awt.Dimension(100, 80));
        listEntregasNaoRealizadas.setPreferredSize(new java.awt.Dimension(100, 80));
        jScrollPane5.setViewportView(listEntregasNaoRealizadas);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jScrollPane5, gridBagConstraints);

        jLabel3.setText("Entregas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Entregas Realizadas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Entregas Não Realizadas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabel5, gridBagConstraints);

        jButton1.setText("▲");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel3.add(jButton1, gridBagConstraints);

        jButton2.setText("▼");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        jPanel3.add(jButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        panelExibicaoRoteiros.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(panelExibicaoRoteiros, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

  private void listRoteirosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listRoteirosMouseClicked
    // TODO add your handling code here:
    atualizarListasControleEncomendas();
  }//GEN-LAST:event_listRoteirosMouseClicked

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // TODO add your handling code here:
    Encomenda encomendaSelecionada = listEntregas.getSelectedValue();

    if (encomendaSelecionada != null) {
      Roteiro roteiro = listRoteiros.getSelectedValue();
      roteiro.resgistrarEntregaRealizada(encomendaSelecionada);
      atualizarListasControleEncomendas();
      TransportadoraController.getInstance().salvarEmArquivo();
    }
  }//GEN-LAST:event_jButton1ActionPerformed

  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    // TODO add your handling code here:
    Encomenda encomendaSelecionada = listEntregas.getSelectedValue();

    if (encomendaSelecionada != null) {
      Roteiro roteiro = listRoteiros.getSelectedValue();
      roteiro.resgistrarEntregaNaoRealizada(encomendaSelecionada);
      atualizarListasControleEncomendas();
      TransportadoraController.getInstance().salvarEmArquivo();
    }
  }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList<Encomenda> listEntregas;
    private javax.swing.JList<Encomenda> listEntregasNaoRealizadas;
    private javax.swing.JList<Encomenda> listEntregasRealizadas;
    private javax.swing.JList<Roteiro> listRoteiros;
    private javax.swing.JTextArea outputRelatorioRoteiro;
    private javax.swing.JPanel panelExibicaoRoteiros;
    // End of variables declaration//GEN-END:variables

  private void atualizarListasControleEncomendas() {
    Roteiro roteiro = listRoteiros.getSelectedValue();

    if (roteiro == null) {
      return;
    }

    listEntregas.setModel(listModelEncomenda(listarEncomendasNaoDefinidas(roteiro)));
    listEntregasRealizadas.setModel(listModelEncomenda(roteiro.getEntregasRealizadas()));
    listEntregasNaoRealizadas.setModel(listModelEncomenda(roteiro.getEntregasNaoRealizadas()));
    outputRelatorioRoteiro.setText(gerarRelatorioRoteiro(roteiro));
    repaint();
  }

  private List<Encomenda> listarEncomendasNaoDefinidas(Roteiro roteiro) {
    List<Encomenda> encomendas = new ArrayList<>();
    for (Encomenda encomenda : roteiro.getEncomendas()) {
      if (!roteiro.getEntregasRealizadas().contains(encomenda) && !roteiro.getEntregasNaoRealizadas().contains(encomenda)) {
        encomendas.add(encomenda);
      }
    }
    return encomendas;
  }

}
