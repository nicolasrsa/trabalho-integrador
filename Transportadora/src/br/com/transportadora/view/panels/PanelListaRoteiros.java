/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.transportadora.view.panels;

import br.com.transportadora.controller.TransportadoraController;
import br.com.transportadora.model.CaminhaoBau;
import br.com.transportadora.model.Encomenda;
import br.com.transportadora.model.ProgramacaoDiaria;
import br.com.transportadora.model.Roteiro;
import br.com.transportadora.model.Van;
import br.com.transportadora.model.Veiculo;
import java.util.List;
import javax.swing.DefaultListModel;


/**
 *
 * @author hatachi
 */
public class PanelListaRoteiros extends javax.swing.JPanel {

  List<ProgramacaoDiaria> programacoesDiarias;

  /**
   * Creates new form PanelListaRoteiros
   */
  public PanelListaRoteiros() {
    initComponents();
    configurarListaRoteiros();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
   * content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    jlistProgramacoesDiarias = new javax.swing.JList<>();
    jSeparator1 = new javax.swing.JSeparator();
    panelExibicaoRoteiros = new javax.swing.JPanel();
    jScrollPane2 = new javax.swing.JScrollPane();
    outputRelatorioRoteiro = new javax.swing.JTextArea();

    setLayout(new java.awt.GridBagLayout());

    jPanel1.setMinimumSize(new java.awt.Dimension(100, 20));
    jPanel1.setLayout(new java.awt.GridBagLayout());

    jLabel1.setText("Roteiros");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    jPanel1.add(jLabel1, gridBagConstraints);

    jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
    jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 200));
    jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 200));

    jlistProgramacoesDiarias.setMinimumSize(new java.awt.Dimension(100, 200));
    jlistProgramacoesDiarias.setPreferredSize(new java.awt.Dimension(100, 200));
    jlistProgramacoesDiarias.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jlistProgramacoesDiariasMouseClicked(evt);
      }
    });
    jScrollPane1.setViewportView(jlistProgramacoesDiarias);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
    jPanel1.add(jScrollPane1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
    add(jPanel1, gridBagConstraints);

    jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
    add(jSeparator1, gridBagConstraints);

    panelExibicaoRoteiros.setLayout(new java.awt.GridBagLayout());

    outputRelatorioRoteiro.setColumns(20);
    outputRelatorioRoteiro.setRows(5);
    jScrollPane2.setViewportView(outputRelatorioRoteiro);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    panelExibicaoRoteiros.add(jScrollPane2, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
    add(panelExibicaoRoteiros, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

  private void jlistProgramacoesDiariasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlistProgramacoesDiariasMouseClicked
    // TODO add your handling code here:
    ProgramacaoDiaria programacaoSelecionada = jlistProgramacoesDiarias.getSelectedValue();

    if (programacaoSelecionada == null) {
      return;
    }

    outputRelatorioRoteiro.setText(gerarRelatorioProgramacaoDoDia(programacaoSelecionada));
  }//GEN-LAST:event_jlistProgramacoesDiariasMouseClicked

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel jLabel1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JList<ProgramacaoDiaria> jlistProgramacoesDiarias;
  private javax.swing.JTextArea outputRelatorioRoteiro;
  private javax.swing.JPanel panelExibicaoRoteiros;
  // End of variables declaration//GEN-END:variables

  public void configurarListaRoteiros() {
    jlistProgramacoesDiarias.removeAll();
    outputRelatorioRoteiro.setText("");
    this.programacoesDiarias = TransportadoraController.getInstance().listarProgramacoesDiarias();
    this.jlistProgramacoesDiarias.setModel(listModelProgramacoesDiarias());
    repaint();
  }

  private DefaultListModel<ProgramacaoDiaria> listModelProgramacoesDiarias() {
    DefaultListModel<ProgramacaoDiaria> listModel = new DefaultListModel<>();
    for (ProgramacaoDiaria programacoesDiaria : programacoesDiarias) {
      listModel.add(0, programacoesDiaria);
    }
    return listModel;
  }

  private String gerarRelatorioProgramacaoDoDia(ProgramacaoDiaria programacaoSelecionada) {
    String texto = "Programação Diária " + programacaoSelecionada.toString() + "\n";

    for (Roteiro roteiro : programacaoSelecionada.getRoteiros()) {
      texto += "\n\n================================\n\n";
      texto += "=> Veículo: " + definirTipoVeiculo(roteiro.getVeiculo()) + "\n";
      texto += "Marca: " + roteiro.getVeiculo().getMarca() + "\n";
      texto += "Modelo: " + roteiro.getVeiculo().getModelo() + "\n";
      texto += "Placa: " + roteiro.getVeiculo().getPlaca() + "\n\n";

      texto += "=> Motorista:" + "\n";
      texto += "Nome: " + roteiro.getMotorista().getNome() + "\n";
      texto += "Número CNH: " + roteiro.getMotorista().getCnh().getNumero() + "\n";
      texto += "Classe CNH: " + roteiro.getMotorista().getCnh().getClasse().toString() + "\n\n";

      texto += "=> Encomendas: \n";
      for (Encomenda encomenda : roteiro.getEncomendas()) {
        texto += encomenda.getCodigo() + "\n";
      }

      texto += "\n\n";
    }

    return texto;
  }

  private String definirTipoVeiculo(Veiculo veiculo) {
    if (veiculo instanceof Van) {
      return "Van";
    } else if (veiculo instanceof CaminhaoBau) {
      return "Caminhão Baú";
    } else {
      return "Carreta";
    }
  }

}
